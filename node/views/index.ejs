<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Plaid Quickstart Example</title>
<link rel="stylesheet" href="https://threads.plaid.com/threads.css">
<!--<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.16.0/themes/prism-tomorrow.css"> -->
<link rel="stylesheet" type="text/css" href="prism.css">
<link rel="stylesheet" type="text/css" href="style.css">
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>
  <header>
   <nav class="main-nav-links">
     <div class="logo">
       <img src="img/plaid-logo-01.svg">
     </div>
     <div class="center">
       <h1 class="page-title">Quickstart <span class="regular">Demo</span></h1>
     </div>
     <div class="right">
       <a href="https://dashboard.plaid.com/signup"><button class="button button--is-small button--is-default top-bar-cta">Get API keys</button></a>
     </div>
   </nav>
  </header>
  <main class="main">
    <div class="grid">
      <div class="grid__column grid__column--is-twelve-columns">
        <div id="banner" class="everpresent-content">
<!--          <h1 class="everpresent-content__heading">Plaid Quickstart</h1>-->
          <p id="intro" class="everpresent-content__subheading">
            An example application outlines an end-to-end integration with Plaid in 3 steps:
          </p>
          <p id="steps" class="everpresent-content__subheading">
           Success! You just created an Item by linking your account.
          </p>
        </div>

        <div id="container" class="initial-view">
<!--
          <p class="initial-view__description">
            Click the button below to open a list of Institutions. After you select one, you’ll be guided through an authentication process. Upon completion, a public_token will be passed back to the server and exchanged for access_token.
          </p>
-->
          <p class="initial-view__description">
            <span class="step-title">1. Select a bank</span> you’d like to connect your application to.
          </p>
          <p class="initial-view__description">
            <span class="step-title">2. Use our provided credentials</span> to create an item. You'll see the credentials after you select a bank.
          </p>
          <p class="initial-view__description">
            <span class="step-title">3. Explore product data</span> in table and JSON format to understand data types retrieved from each product.
          </p>
          

          <button id="link-btn" class="button button--is-primary">Connect with Plaid</button>
        </div>

        <div id="app" class="connected-view">
          <div class="item-overview">
            <div class="item-overview__column">
              <h3 class="item-overview__heading">item_id</h3>
              <p class="item-overview__id" id="item_id">san.asjsansakjsakjasjksajkas</p>
            </div>
            <div class="item-overview__column" id="access-token-container">
              <h3 class="item-overview__heading">access_token</h3>
              <p class="item-overview__id" id="access_token">••••••••hsakjsl</p>
            </div>

            <div style="clear: both"></div>
          </div>

          <p class="request-intro">Now that you have an access_token you can make all of the following API requests:</p>

          <div class="box">
            <h3 class="box__heading">Products</h3>

            <!-- Auth -->
            <div class="item-data-row">
              <div class="item-data-row__left">
                <div class="item-data-row__request-type">post</div>
              </div>
              <div class="item-data-row__center">
                <div class="item-data-row__nicename">Auth</div>
                <div class="item-data-row__endpoint">/auth/get</div>
                <div class="item-data-row__description">Retrieve account and routing numbers for checking and savings accounts.</div>
              </div>
              <div class="item-data-row__right">
                <button id="get-auth-btn" class="button button--is-small button--is-default button--is-full-width">Send request</button>
              </div>
              <div class="item-data-row__response">
<!--                <table><tbody id="get-auth-data"></tbody></table>-->
                <div id="get-auth-json"></div>
              </div>
            </div>

            <!--Transactions -->
            <div class="item-data-row">
              <div class="item-data-row__left">
                <div class="item-data-row__request-type">post</div>
              </div>
              <div class="item-data-row__center">
                <div class="item-data-row__nicename">Transactions</div>
                <div class="item-data-row__endpoint">/transactions/get</div>
                <div class="item-data-row__description">Retrieve transactions for credit and depository accounts.</div>
              </div>
              <div class="item-data-row__right">
                <button id="get-transactions-btn" class="button button--is-small button--is-default button--is-full-width">Send request</button>
              </div>
              <div class="item-data-row__response">
<!--                <table><tbody id="get-transactions-data"></tbody></table>-->
                <div id="get-txn-json"></div>
              </div>
            </div>

            <!-- Identity -->
            <div class="item-data-row">
              <div class="item-data-row__left">
                <div class="item-data-row__request-type">post</div>
              </div>
              <div class="item-data-row__center">
                <div class="item-data-row__nicename">Identity</div>
                <div class="item-data-row__endpoint">/identity/get</div>
                <div class="item-data-row__description">Retrieve Identity information on file with the bank. Reduce fraud by comparing user-submitted data to validate identity.</div>
              </div>
              <div class="item-data-row__right">
                <button id="get-identity-btn" class="button button--is-small button--is-default button--is-full-width">Send request</button>
              </div>
              <div class="item-data-row__response">
<!--                <table><tbody id="get-identity-data"></tbody></table>-->
              <div id="get-identity-data"></div>
              </div>
            </div>

            <!-- Balance -->
            <div class="item-data-row">
              <div class="item-data-row__left">
                <div class="item-data-row__request-type">post</div>
              </div>
              <div class="item-data-row__center">
                <div class="item-data-row__nicename">Balance</div>
                <div class="item-data-row__endpoint">/accounts/balance/get</div>
                <div class="item-data-row__description">Check balances in real time to prevent non-sufficient funds fees.</div>
              </div>
              <div class="item-data-row__right">
                <button id="get-balance-btn" class="button button--is-small button--is-default button--is-full-width">Send request</button>
              </div>
              <div class="item-data-row__response">
<!--                <table><tbody id="get-balance-data"></tbody></table>-->
                <div id="get-balance-data"></div>
              </div>
            </div>

            <!-- Assets (hidden unless 'assets' is included in the product list) -->
            <div id='assets' class="item-data-row" style='display:none;'>
              <div class="item-data-row__left">
                <div class="item-data-row__request-type">post</div>
              </div>
              <div class="item-data-row__center">
                <div class="item-data-row__nicename">Assets</div>
                <div class="item-data-row__endpoint">/asset_report/*</div>
                <div class="item-data-row__description">Create a point-in-time snapshot of a user's assets.</div>
              </div>

              <div class="item-data-row__right">
                <button id="get-assets-btn" class="button button--is-small button--is-default button--is-full-width">Send request</button>

                <a id="download-assets-pdf-btn" class="button button--is-small button--is-primary button--is-full-width" style="display: none; margin: 10px 0px;";>Download as PDF</a>
              </div>

              <div class="item-data-row__response">
                <table><tbody id="get-assets-data"></tbody></table>
              </div>
            </div>

          </div>

          <div class="box">
            <h3 class="box__heading">Item management</h3>

            <div class="item-data-row">
              <div class="item-data-row__left">
                <div class="item-data-row__request-type">post</div>
              </div>
              <div class="item-data-row__center">
                <div class="item-data-row__endpoint">/item/get</div>
                <div class="item-data-row__description">Retrieve information about an Item, like the institution, billed products, available products, and webhook information.</div>
              </div>

              <div class="item-data-row__right">
                <button id="get-item-btn" class="button button--is-small button--is-default button--is-full-width">Send request</button>
              </div>

              <div class="item-data-row__response">
<!--                <table><tbody id="get-item-data"></tbody></table>-->
                <div id="get-item-data"></div>
              </div>
            </div>

            <div class="item-data-row">
              <div class="item-data-row__left">
                <div class="item-data-row__request-type">post</div>
              </div>
              <div class="item-data-row__center">
                <div class="item-data-row__endpoint">/accounts/get</div>
                <div class="item-data-row__description">Retrieve high-level information about all accounts associated with an Item.</div>
              </div>

              <div class="item-data-row__right">
                <button id="get-accounts-btn" class="button button--is-small button--is-default button--is-full-width">Send request</button>
              </div>

              <div class="item-data-row__response">
<!--                <table><tbody id="get-accounts-data"></tbody></table>-->
                <div id="get-accounts-data"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>

  <script src="prism.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.3/jquery.min.js"></script>
  <script src="https://cdn.plaid.com/link/v2/stable/link-initialize.js"></script>
<!--  <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.16.0/components/prism-json.min.js"></script>-->

  <script>
  (function($) {
    var products = '<%= PLAID_PRODUCTS %>'.split(',');
    if (products.includes('assets')) {
      $('#assets').show();
    }

    var handler = Plaid.create({
      apiVersion: 'v2',
      clientName: 'Plaid Quickstart',
      env: '<%= PLAID_ENV %>',
      product: products,
      key: '<%= PLAID_PUBLIC_KEY %>',
      // webhook: 'https://your-domain.tld/plaid-webhook',
      onSuccess: function(public_token) {
        $.post('/get_access_token', {
          public_token: public_token
        }, function(data) {
          $('#container').fadeOut('fast', function() {
            $('#item_id').text(data.item_id);
            $('#access_token').text(data.access_token);
            $('#intro').hide();
            $('#app, #steps').fadeIn('slow');
          });
        });
      },
    });
    var accessToken = qs('access_token');
    if (accessToken != null && accessToken != '') {
      $.post('/set_access_token', {
        access_token: accessToken
      }, function(data) {
        $('#container').fadeOut('fast', function() {
          $('#item_id').text(data.item_id);
          $('#access_token').text(accessToken);
          $('#intro').hide();
          $('#app, #steps').fadeIn('slow');
        });
      });
    }

    $('#link-btn').on('click', function(e) {
      handler.open();
    });

    $('#get-accounts-btn').on('click', function(e) {
      $.get('/accounts', function(data) {

        $('#get-accounts-data').slideUp(function() {
          if (data.error != null) {
            displayError(this, data.error);
            return;
          }
          var html = '<table><tbody><tr><td><span class="table-header">Name</span></td><td><span class="table-header">Balances</span></td><td><span class="table-header">Subtype</span></td><td><span class="table-header">Mask</span></td></tr>';
          data.accounts.accounts.forEach(function(account, idx) {
            html += '<tr>';
            html += '<td>' + account.name + '</td>';
            html += '<td>$' + (account.balances.available != null ? account.balances.available : account.balances.current) + '</td>';
            html += '<td>' + account.subtype + '</td>';
            html += '<td>' + account.mask + '</td>';
            html += '</tr>';
          });

          var responseJson = '</tbody></table><pre class="language-json">' + JSON.stringify(data.accounts,  null, 2) + '</pre>';
          var accountsHtml = '<div>' + html + responseJson + '</div>';
          $(this).html(accountsHtml).slideDown(null, function() {
            Prism.highlightElement($(this).find('pre.language-json')[0]);
          });
        });
      });
    });

    $('#get-auth-btn').on('click', function(e) {
      $.get('/auth', function(data) {
        $('#get-auth-json').slideUp(function() {
          if (data.error != null) {
            displayError(this, data.error);
            return;
          }
          var authData = data.auth;
          var isAch = authData.numbers.ach.length > 0;
          var routingLabel = isAch ? 'Routing #' : 'Institution and Branch #';

          var html = '<table><tbody><tr><td><span class="table-header">Name</span></td><td><span class="table-header">Balance</span></td><td><span class="table-header">Account #</span></td><td><span class="table-header">'+ routingLabel +'</span></td></tr>';
          if (isAch) {
            authData.numbers.ach.forEach(function(achNumbers, idx) {
              // Find the account associated with this set of account and routing numbers
              var account = authData.accounts.filter(function(a) {
                return a.account_id == achNumbers.account_id;
              })[0];
              html += '<tr>';
              html += '<td>' + account.name + '</td>';
              html += '<td>$' + (account.balances.available != null ? account.balances.available : account.balances.current) + '</td>';
              html += '<td>' + achNumbers.account + '</td>';
              html += '<td>' + achNumbers.routing + '</td>';
              html += '</tr>';
            });
          } else {
            authData.numbers.eft.forEach(function(eftNumber, idx) {
              // Find the account associated with this set of account and routing numbers
              var account = authData.accounts.filter(function(a) {
                return a.account_id == eftNumber.account_id;
              })[0];
              html += '<tr>';
              html += '<td>' + account.name + '</td>';
              html += '<td>$' + (account.balances.available != null ? account.balances.available : account.balances.current) + '</td>';
              html += '<td>' + eftNumber.account + '</td>';
              html += '<td>' + eftNumber.institution + ' ' + eftNumber.branch + '</td>';
              html += '</tr>';

            });
          }
          
//          console.log(JSON.stringify(authData,  null, 2));
//          console.log("html before", html);
          var responseJson = '</tbody></table><pre class="language-json">' + JSON.stringify(authData,  null, 2) + '</pre>';
          var authHtml = '<div>' + html + responseJson + '</div>';
//          console.log("html after", html);
          $(this).html(authHtml).slideDown(null, function() {
            Prism.highlightElement($(this).find('pre.language-json')[0]);
          });
        });
      });
    });

    $('#get-identity-btn').on('click', function(e) {
      $.get('/identity', function(data) {
        $('#get-identity-data').slideUp(function() {
          if (data.error != null) {
            displayError(this, data.error);
            return;
          }
          var identityData = data.identity.identity;
          var html = '<table><tbody><tr class="response-row response-row--is-identity"><td><span class="table-header">Names</span></td><td><span class="table-header">Emails</span></td><td><span class="table-header">Phone numbers</span></td><td><span class="table-header">Addresses</span></td></tr><tr class="response-row response-row--is-identity">';
          html += '<td>';
          identityData.names.forEach(function(name, idx) {
            html += name + '<br />';
          });
          html += '</td><td>';
          identityData.emails.forEach(function(email, idx) {
            html += email.data + '<br />';
          });
          html += '</td><td>';
          identityData.phone_numbers.forEach(function(number, idx) {
            html += number.data + '<br />';
          });
          html += '</td><td>';
          identityData.addresses.forEach(function(address, idx) {
            html += address.data.street + '<br />';
            html += address.data.city + ', ' + address.data.state + ' ' + address.data.zip;
          });
          html += '</td></tr>';

//          console.log(JSON.stringify(identityData,  null, 2));
//          console.log("html before", html);
          var responseJson = '</tbody></table><pre class="language-json">' + JSON.stringify(identityData,  null, 2) + '</pre>';
          var identityHtml = '<div>' + html + responseJson + '</div>';
//          console.log("html after", html);
          $(this).html(identityHtml).slideDown(null, function() {
            Prism.highlightElement($(this).find('pre.language-json')[0]);
          });
        });
      });
    });

    $('#get-item-btn').on('click', function(e) {
      $.get('/item', function(data) {
        $('#get-item-data').slideUp(function() {
          if (data.error) {
            displayError(this, data.error);
          } else {
            var html = '<table><tbody>';
            html += '<tr><td><span class="table-header">Institution name</span></td><td>' + data.institution.name + '</td></tr>';
            html += '<tr><td><span class="table-header">Billed products</span></td><td>' + data.item.billed_products.join(', ') + '</td></tr>';
            html += '<tr><td><span class="table-header">Available products</span></td><td>' + data.item.available_products.join(', ') + '</td></tr>';

          var responseJson = '</tbody></table><pre class="language-json">' + JSON.stringify(data.item,  null, 2) + '</pre>';
          var itemHtml = '<div>' + html + responseJson + '</div>';
          $(this).html(itemHtml).slideDown(null, function() {
            Prism.highlightElement($(this).find('pre.language-json')[0]);
          });
          }
        });
      });
    });

    $('#get-transactions-btn').on('click', function(e) {
      $.get('/transactions', function(data) {
        if (data.error != null && data.error.error_code != null) {
          // Format the error
          var errorHtml = '<div class="inner"><p>' +
           '<strong>' + data.error.error_code + ':</strong> ' +
           (data.error.display_message == null ? data.error.error_message : data.error.display_message)  + '</p></div>';

          if (data.error.error_code === 'PRODUCT_NOT_READY') {
            // Add additional context for `PRODUCT_NOT_READY` errors
            errorHtml += '<div class="inner"><p>Note: The PRODUCT_NOT_READY ' +
             'error is returned when a request to retrieve Transaction data ' +
             'is made before Plaid finishes the <a href="https://plaid.com/' +
             'docs/quickstart/#transaction-data-with-webhooks">initial ' +
             'transaction pull.</a></p></div>';
          }
          // Render the error
          $('#get-transactions-data').slideUp(function() {
            $(this).slideUp(function() {
              $(this).html(errorHtml).slideDown();
            });
          });
        } else {
          $('#get-txn-json').slideUp(function() {
            var html = '<table><tbody><tr><td><span class="table-header">Name</span></td><td><span class="table-header">Amount</span></td><td><span class="table-header">Date</span></td></tr>';
            data.transactions.transactions.forEach(function(txn, idx) {
              html += '<tr>';
              html += '<td>' + txn.name + '</td>';
              html += '<td>$' + txn.amount + '</td>';
              html += '<td>' + txn.date + '</td>';
              html += '</tr>';
            
            });
            
            console.log(JSON.stringify(data.transactions,  null, 2));
            console.log("html before", html);
            var responseJson = '</tbody></table><pre class="language-json">' + JSON.stringify(data.transactions,  null, 2) + '</pre>';

            var txnHtml = '<div>' + html + responseJson + '</div>';
            console.log("html after", html);
            $(this).html(txnHtml).slideDown(null, function() {
              Prism.highlightElement($(this).find('pre.language-json')[0]);
            });
            
          });
        }
      });
    });

    $('#get-balance-btn').on('click', function(e) {
      $.get('/balance', function(data) {
        $('#get-balance-data').slideUp(function() {
          if (data.error != null) {
            displayError(this, data.error);
            return;
          }
          var balanceData = data.balance;
          var html = '<table><tbody><tr><td><span class="table-header">Name</span></td><td><span class="table-header">Balance</span></td><td><span class="table-header">Subtype</span></td><td><span class="table-header">Mask</span></td></tr>';
          balanceData.accounts.forEach(function(account, idx) {
            html += '<tr>';
            html += '<td>' + account.name + '</td>';
            html += '<td>$' + (account.balances.available != null ? account.balances.available : account.balances.current) + '</td>'
            html += '<td>' + account.subtype + '</td>';
            html += '<td>' + account.mask + '</td>';
            html += '</tr>';
          });
          
          console.log(JSON.stringify(balanceData,  null, 2));
          console.log("html before", html);
          var responseJson = '</tbody></table><pre class="language-json">' + JSON.stringify(balanceData,  null, 2) + '</pre>';
          var balanceHtml = '<div>' + html + responseJson + '</div>'
          $(this).html(balanceHtml).slideDown(null, function() {
            Prism.highlightElement($(this).find('pre.language-json')[0]);
          });
          
        });
      });
    });

    $('#get-assets-btn').on('click', function(e) {
      $.get('/assets', function(data) {
        $('#get-assets-data').slideUp(function() {
          if (data.error != null) {
            displayError(this, data.error);
            return;
          }
          var reportData = data.json;
          var html = `
          <tr>
            <td><strong>Account</strong></td>
            <td><strong>Balance</strong></td>
            <td><strong># Transactions</strong></td>
            <td><strong># Days Available</strong></td>
          </tr>`;
          reportData.items.forEach(function(item, itemIdx) {
            item.accounts.forEach(function(account, accountIdx) {
              html += '<tr>';
              html += '<td>' + account.name + '</td>';
              html += '<td>$' + account.balances.current + '</td>'
              html += '<td>' + account.transactions.length + '</td>';
              html += '<td>' + account.days_available + '</td>';
              html += '</tr>';
            });
          });

          $('#download-assets-pdf-btn')
            .attr('href', `data:application/pdf;base64,${data.pdf}`)
            .attr('download', 'Asset Report.pdf')
            .show();

          $(this).html(html).slideDown();
        });
      });
    });
  })(jQuery);

function qs(key) {
    key = key.replace(/[*+?^$.\[\]{}()|\\\/]/g, "\\$&"); // escape RegEx meta chars
    var match = location.search.match(new RegExp("[?&]"+key+"=([^&]+)(&|$)"));
    return match && decodeURIComponent(match[1].replace(/\+/g, " "));
}

function displayError(element, error) {
  var html = `
    <div class="alert alert-danger">
      <p><strong>Error Code:</strong> ${error.error_code}</p>
      <p><strong>Error Type:</strong> ${error.error_type}</p>
      <p><strong>Error Message:</strong> ${error.display_message == null ? error.error_message : error.display_message}</p>
      <div>Check out our <a href="https://plaid.com/docs/#errors-overview">errors documentation</a> for more information.</div>
    </div>`;
  $(element).html(html).slideDown();
}
    
    
  </script>
</body>
</html>
